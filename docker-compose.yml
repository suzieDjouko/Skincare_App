version: "3.9"

services:
  backend:
    build: ./backend
    container_name: backend
    ports:
      - "3001:3000"
    env_file:
      - ./backend/.env
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./dump:/dump

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: angular-frontend
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development

  mongo:
    image: mongo:6
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      start_period: 50s
      retries: 5

  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      POSTGRES_HOST_AUTH_METHOD: md5
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Fullstack25
      POSTGRES_DB: skincare
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mongo_data:
  postgres_data:
